library(tidyverse)
library(dplyr)
library(ggplot2)
library(geofi)
library(sf)
library(geosphere)
###########################
#     Load Data Files     #
###########################
#set working directory
setwd("../..")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(geofi)
library(sf)
library(geosphere)
###########################
#     Load Data Files     #
###########################
#set working directory
setwd("../..")
#load parentage results - all loci = al
UHA_al_par <- read.csv("Analysis/Parentage_Analysis/All_Loci/Output_Files/all_loci_par_sum.csv",
row.names = NULL)
setwd(C:/Users/eschumacher/Documents/GitHub/USBGHybridAcornsREU2023)
setwd("C:/Users/eschumacher/Documents/GitHub/USBGHybridAcornsREU2023")
#load parentage results - all loci = al
UHA_al_par <- read.csv("Analysis/Parentage_Analysis/CERVUS_Fikes/All_Loci/Output_Files/all_loci_par_sum.csv",
row.names = NULL)
#load parentage results - all loci = al
UHA_al_par <- read.csv("Analysis/Parentage_Analysis/CERVUS_Files/All_Loci/Output_Files/all_loci_par_sum.csv",
row.names = NULL)
View(UHA_al_par)
#load parentage results - all loci = al
UHA_al_par <- read.csv("Analysis/Parentage_Analysis/CERVUS_Files/All_Loci/Output_Files/all_loci_par_sum.csv")
#remove periods from UHA data frame
colnames(UHA_al_par) <- gsub("\\.", "_", colnames(UHA_al_par))
View(UHA_al_par)
#load parentage results - reduced loci = rl
UHA_rl_par <- read.csv("Analysis/Parentage_Analysis/CERVUS_Files/Output_Files/red_loci_par_sum.csv")
#load parentage results - reduced loci = rl
UHA_rl_par <- read.csv("Analysis/Parentage_Analysis/CERVUS_Files/Red_Loci/Output_Files/red_loci_par_sum.csv")
View(UHA_rl_par)
#load parentage results - reduced loci = rl
UHA_rl_par <- read.csv("Analysis/Parentage_Analysis/CERVUS_Files/Red_Loci/Output_Files/red_loci_par_sum.csv")
#remove periods from colnames
colnames(UHA_rl_par) <- gsub("\\.", "_", colnames(UHA_rl_par))
##create a list of the parentage results data frames
par_res_list <- list(UHA_al_par, UHA_rl_par)
#create a list of scenarios
scen <- c("all_loci", "red_loci")
#loop to reduce the parental summary data frames for low confidence father assignments
for(sc in 1:length(scen)){
temp_df <- par_res_list[[sc]]
#first, join genotype files with parentage results
HCF_df  <- temp_df[((temp_df$Pair_LOD_score > 0) & (temp_df$Trio_LOD_score > 0)),]
#write out data frame
write.csv(HCF_df, paste0("Data_Files/CSV_Files/", scen[[sc]], "_HCF_par_sum.csv"))
}
#load in all parentage summary data frames
par_sum_list <- list.files(path = "Data_Files/CSV_Files/", pattern = "par_sum")
#reorder list
par_sum_list <- list(par_sum_list[[2]], par_sum_list[[1]],
par_sum_list[[4]], par_sum_list[[3]])
#read CSVs
par_sum_df_list <- list()
#Loop over
for(df in par_sum_list){
par_sum_df_list[[df]] <- read.csv(paste0("Data_Files/CSV_Files/", df))
}
##load score data frames
#All loci
al_score_df <- read.csv("Analysis/Parentage_Analysis/All_Loci/Input_Files/UHA_all_loci_genotype_df.csv")
#Reduced loci
rl_score_df <- read.csv("Analysis/Parentage_Analysis/Red_Loci/Input_Files/UHA_red_loci_genotype_df.csv")
##load score data frames
#All loci
al_score_df <- read.csv("Analysis/Parentage_Analysis/CERVUS_Files/All_Loci/Input_Files/UHA_all_loci_genotype_df.csv")
##load score data frames
#All loci
al_score_df <- read.csv("Analysis/Parentage_Analysis/CERVUS_Files/All_Loci/Input_Files/UHA_all_loci_genotype_df.csv")
##load score data frames
#All loci
al_score_df <- read.csv("Analysis/Parentage_Analysis/CERVUS_Files/All_Loci/Input_Files/UHA_all_loci_clean_genotype_df.csv")
##load score data frames
#All loci
al_score_df <- read.csv("Analysis/Parentage_Analysis/CERVUS_Files/All_Loci/Input_Files/UHA_all_loci_clean_genotype_df.csv")
#Reduced loci
rl_score_df <- read.csv("Analysis/Parentage_Analysis/CERVUS_Files/Red_Loci/Output_Files/UHA_red_loci_clean_genotype_df.csv")
#Reduced loci
rl_score_df <- read.csv("Analysis/Parentage_Analysis/CERVUS_Files/Red_Loci/Input_Files/UHA_red_loci_clean_genotype_df.csv")
#combine into a list
score_df_list <- list(al_score_df, rl_score_df)
off_df_list <- list()
for(o in 1:length(score_df_list)){
#limit data frame to just offspring for each scenario
off_df_list[[o]] <- score_df_list[[o]][score_df_list[[o]]$Parent_Offspring == "O",]
#rename "Tissue ID" to "Offspring_ID"
colnames(off_df_list[[o]])[1] <- "Offspring_ID"
}
#load UHA database
UHA_database <- read.csv("Data_Files/CSV_Files/ARCHIVED_USBG_Hybrid_Acorn_Tissue_Database.csv")
#all scenarios
full_scen <- c("all_loci", "HCF_all_loci",
"red_loci", "HCF_red_loci")
#loop over four scenarios
for(sc in 1:length(full_scen)){
#store temporary data frame
par_temp_df <- par_sum_df_list[[sc]]
#replace periods with underscores
colnames(par_temp_df) <- gsub("\\.", "_", colnames(par_temp_df))
#join maternal information with the parentage summary
par_temp_df <- left_join(par_temp_df, UHA_database,
by=c('Mother_ID' = 'Tissue_ID'))
#rename the species data frame to the maternal species
par_temp_df <- par_temp_df %>% rename("Maternal_Species" = "Species",
"Maternal_Longitude" = "Longitude",
"Maternal_Latitude" = "Latitude",
"Maternal_Accession" = "Accession_Number")
##reorg data frame
#Adding in Species Information for Maternal and Paternal trees
keep_col_ID <- c("Offspring_ID","Mother_ID", "Candidate_father_ID",
"Maternal_Species", "Maternal_Longitude",
"Maternal_Latitude", "Maternal_Accession")
# Narrowing the data again after the join of data sets
par_temp_df <- par_temp_df[keep_col_ID]
#add paternal information
par_temp_df <- left_join(par_temp_df, UHA_database,
by=c('Candidate_father_ID' = 'Tissue_ID'))
#rename columns
par_temp_df <- par_temp_df %>% rename('Candidate_Father_Species' = 'Species',
"Candidate_Father_Longitude" = "Longitude",
"Candidate_Father_Latitude" = "Latitude",
"Candidate_Father_Accession" = "Accession_Number")
#reduce by empty columns
keep_col_ID2 <- c("Offspring_ID","Mother_ID", "Candidate_father_ID",
"Maternal_Species", "Maternal_Longitude", "Maternal_Latitude",
"Maternal_Accession", "Candidate_Father_Species",
"Candidate_Father_Longitude", "Candidate_Father_Latitude",
"Candidate_Father_Accession")
#reduce data frame by populated columns
par_temp_df <- par_temp_df[keep_col_ID2]
###do half sibling analysis
##Mikaely Evans' code
#initialize columns in the data frame
par_temp_df$Half_Sibs <- NA  # Made three new columns for this analysis
par_temp_df$M_Accession_Abrv <- NA
par_temp_df$F_Accession_Abrv <- NA
#Abbreviating the accession numbers for the maternal and paternal trees was necessary to assign half sibling status because it is only necessary to look at the first 6 characters in the accession number to know if the trees came from the same lineage.
par_temp_df$M_Accession_Abrv <- substr(par_temp_df$Maternal_Accession, 0, 6)
#This line adds the Maternal accession abbreviation to the M_Accession_Abrv column
par_temp_df$F_Accession_Abrv <- substr(par_temp_df$Candidate_Father_Accession, 0, 6)
#This line adds the paternal accession abbreviation to the F_Accession_Abrv column
par_temp_df <- par_temp_df %>%
mutate("Half_Sibs" = case_when(M_Accession_Abrv == F_Accession_Abrv ~ TRUE,
M_Accession_Abrv != F_Accession_Abrv ~ FALSE))
##Add geographic information
#create a column for distance between mom and dad
par_temp_df$dist_par <- NA
#loop to calculate distance between parents
for(dist in 1:nrow(par_temp_df)){
par_temp_df$dist_par[dist] <- distm(par_temp_df[dist,5:6],
par_temp_df[dist,9:10],
fun=distGeo)
}
###Code to add hybrid status
par_temp_df$Hybrid_Status <- NA
par_temp_df <- par_temp_df %>%
mutate(Hybrid_Status = case_when(Maternal_Species == Candidate_Father_Species ~ FALSE,
Maternal_Species != Candidate_Father_Species ~ TRUE))
#write to file
write.csv(par_temp_df, paste0("Data_Files/CSV_Files/UHA_",full_scen[[sc]], "_analysis_df.csv"),
row.names = FALSE)
}
library(tidyverse)
library(ggplot2)
#set working directory
setwd("../..")
sessionInfo()
library(adegenet)
library(poppr)
library(PopGenReport)
library(tidyverse)
?null.all
setwd("C:/Users/eschumacher/Documents/GitHub/USBG_Hybrid_Acorns")
#load in UHA database
UHA_database <- read.csv("Data_Files/CSV_Files/USBG_Hybrid_Acorn_Tissue_Database.csv")
View(UHA_database)
#load in UHA database
UHA_database <- read.csv("Data_Files/CSV_Files/USBG_Hybrid_Acorn_Tissue_Database.csv")
#load in UHA database
UHA_database <- read.csv("Data_Files/CSV_Files/USBG_Hybrid_Acorn_Tissue_Database.csv")
#load in UHA database
UHA_database <- read.csv("Data_Files/CSV_Files/UHA_database.csv")
table(UHA_database$Species)
#organized
UHA_species <- table(UHA_database$Species)
#organized
UHA_species <- UHA_database %>%
dplyr::group_by(Species)
View(UHA_species)
table(UHA_database$Species)
#organized
UHA_species <- table(UHA_database$Species)
UHA_species[,]
UHA_species[,1]
as.data.frame(table(UHA_database$Species))
#organized
UHA_species <- as.data.frame(table(UHA_database$Species))
gsub("", "xd7", UHA_species$Var1)
gsub("xd7", "x", UHA_species$Var1)
gsub("\\\xd7", "x", UHA_species$Var1)
UHA_species$Var1
gsub("\\\xd7", "x", UHA_species$Var1)
write.csv(UHA_species, "./Results/Preliminary_Genotyping_Analysis/UHA_species.csv")
#load in genepop file as a genind object
UHA_genind <- read.genepop("Data_Files/Genotype_Files/2024_07_genepop.gen", ncode = 2)
#load score df
UHA_scores_df <- read.csv("Data_Files/CSV_Files/2024_07_UHA_database.csv")
#load in UHA database
UHA_database <- read.csv("Data_Files/CSV_Files/UHA_database.csv")
summary(UHA_genind)
mean(summary(UHA_genind)[[7]])
mean(summary(UHA_genind)[[6]])
library(poppr)
gendiv_poppr <- poppr(UHA_genind_nomd)
#reduce genind file for individuals with greater than 25% missing data
UHA_genind_nomd <- missingno(UHA_genind, type = "geno",
cutoff = 0.25, quiet = FALSE, freq = FALSE)
gendiv_poppr <- poppr(UHA_genind_nomd)
gendiv_poppr[1:length(levels(UHA_genind_nomd@pop)),10]
#create data table
gendiv_sum_stats <- matrix(nrow = 3, ncol = 1)
summary(UHA_genind_nomd)
#create data table
gendiv_sum_stats <- matrix(nrow = 1, ncol = 5)
mean(summary(UHA_genind_nomd)[[4]])
nAll(UHA_genind_nomd)
poppr(UHA_genind_nomd)
#create poppr data file
gendiv_poppr <- poppr(UHA_genind_nomd)
gendiv_poppr$N
gendiv_poppr$MLG[[3]]
gendiv_poppr
nAll(UHA_genind_nomd)
sum(nAll(UHA_genind_nomd))
109+226
allelic.richness(sp_genind_temp)$Ar
allelic.richness(UHA_genind_nomd)$Ar
library(hierfstat)
install.packages("hierfstat")
library(hierfstat)
allelic.richness(sp_genind_temp)$Ar
allelic.richness(UHA_genind_nomd)$Ar
boxplot(allelic.richness(UHA_genind_nomd)$Ar)
rowMeans(allelic.richness(UHA_genind_nomd)$Ar)
mean(rowMeans(allelic.richness(UHA_genind_nomd)$Ar))
mean(allelic.richness(UHA_genind_nomd)$Ar)
mean(summary(UHA_genind_nomd)[[7]])
#expected heterozygosity
gendiv_sum_stats[,5] <- mean(summary(UHA_genind_nomd)[[7]])
#create data table
gendiv_sum_stats <- matrix(nrow = 3, ncol = 5)
#number of individuals - total
gendiv_sum_stats[1,1] <- gendiv_poppr$N[[1]]
gendiv_sum_stats[2,1] <- gendiv_poppr$N[[2]]
gendiv_sum_stats[3,1] <- gendiv_poppr$N[[3]]
View(gendiv_sum_stats)
#MLG
gendiv_sum_stats[1,2] <- gendiv_poppr$MLG[[1]]
gendiv_sum_stats[2,2] <- gendiv_poppr$MLG[[2]]
gendiv_sum_stats[3,2] <- gendiv_poppr$MLG[[3]]
View(gendiv_sum_stats)
nAll(UHA_genind_nomd)
summary(UHA_genind_nomd)
summary(UHA_genind_nomd)[[4]]
summary(UHA_genind_nomd)[[4]][[1]]
#number of alleles
gendiv_sum_stats[1,3] <- summary(UHA_genind_nomd)[[4]][[1]]
gendiv_sum_stats[2,3] <- summary(UHA_genind_nomd)[[4]][[2]]
gendiv_sum_stats[3,3] <- sum(nAll(UHA_genind_nomd))
View(gendiv_sum_stats)
rowMeans(allelic.richness(UHA_genind_nomd)$Ar)
allelic.richness(UHA_genind_nomd)$Ar[,1]
mean(allelic.richness(UHA_genind_nomd)$Ar[,1])
#allrich
gendiv_sum_stats[1,4] <- mean(allelic.richness(UHA_genind_nomd)$Ar[,1])
gendiv_sum_stats[2,4] <- mean(allelic.richness(UHA_genind_nomd)$Ar[,2])
gendiv_sum_stats[3,4] <- mean(rowMeans(allelic.richness(UHA_genind_nomd)$Ar))
View(gendiv_sum_stats)
gendiv_poppr$Hexp
mean(summary(UHA_genind_nomd)[[7]])
#expected heterozygosity
gendiv_sum_stats[1,5] <- gendiv_poppr$Hexp[[1]]
gendiv_sum_stats[2,5] <- gendiv_poppr$Hexp[[2]]
gendiv_sum_stats[3,5] <- gendiv_poppr$Hexp[[3]]
View(gendiv_sum_stats)
inbreeding(UHA_genind_nomd)
#write out summary data file
inbreeding <- inbreeding(UHA_genind_nomd)
mean(inbreeding)
mean(inbreeding, rm.na = TRUE)
#write out summary data file
write.csv(gendiv_sum_stats, "Results/Preliminary_Genotyping_Analysis/gendiv_sum_stats.csv")
#name rows and columns
rownames(gendiv_sum_stats) <- c("Offspring", "Parents", "Total")
colnames(gendiv_sum_stats) <- c("N", "MLG", "nAll", "Allelic Richness",
"Expected Heterozygosity")
#write out summary data file
write.csv(gendiv_sum_stats, "Results/Preliminary_Genotyping_Analysis/gendiv_sum_stats.csv")
