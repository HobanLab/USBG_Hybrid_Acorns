library(adegenet)
library(poppr)
library(PopGenReport)
#set working directoy
setwd("../Data_Files")
#set working directoy
setwd("../..")
#load in genepop file as a genind object
UHA_genind <- read.genepop("Data_Files/Genotype_Files/2024_UHA_genepop.gen", ncode = 2)
#load score df
UHA_scores_df <- read.csv("CSV_Files/UHA_score_df.csv")
#load in genepop file as a genind object
UHA_genind <- read.genepop("Data_Files/Genotype_Files/2024_UHA_genepop.gen", ncode = 2)
#load score df
UHA_scores_df <- read.csv("Data_Files/CSV_Files/UHA_score_df.csv")
#reduce genind file for individuals with greater than 25% missing data
UHA_genind_nomd <- missingno(UHA_genind, type = "geno",
cutoff = 0.25, quiet = FALSE, freq = FALSE)
#write out genind object as a genalex file
genind2genalex(UHA_genind_nomd,
"CSV_Files/UHA_Final_Scores_genalex_clean.csv")
#write out genind object as a genalex file
genind2genalex(UHA_genind_nomd,
"Data_Files/CSV_Files/UHA_Final_Scores_genalex_clean.csv")
#limit by the cleaned individuals
UHA_scores_clean_df <- UHA_scores_df[UHA_scores_df[,1] %in%
rownames(UHA_genind_nomd@tab),]
#write out
write.csv(UHA_scores_clean_df, "CSV_Files/UHA_score_clean_df.csv")
#write out
write.csv(UHA_scores_clean_df, "Data_Files/CSV_Files/UHA_score_clean_df.csv")
#run null allele calculations over all genind objects
UHA_null_all <- null.all(UHA_genind_nomd)
#visualize
null_all_df <- signif(data.frame(UHA_null_all$null.allele.freq$summary2),3)*100
View(null_all_df)
#write out null allele data frame
write.csv(null_all_df, "Results/Preliminary_Genotyping_Analysis/null_all_df.csv")
####Linkage Disequilibrium
#calculate linkage disequilbrium
UHA_ld <- pair.ia(UHA_genind_nomd, sample = 1000)
#convert to a data frame
UHA_ld_df <- data.frame(round(UHA_ld, digits = 2))
#write out ld df
write.csv(UHA_ld_df, "Results/Preliminary_Genotyping_Analysis/ld_df.csv")
t(null_all_df)
which(t(null_all_df)$`Observed frequency` > 15)
#first identify which alleles have > 10% null alleles
na_reorg <- t(null_all_df)
#first identify which alleles have > 10% null alleles
na_reorg_df <- as.data.frame(t(null_all_df))
na_reorg_df$`Observed frequency`
which(na_reorg_df$`Observed frequency` > 10)
na_reorg_df[which(na_reorg_df$`Observed frequency` > 10),]
rownames(na_reorg_df[which(na_reorg_df$`Observed frequency` > 10),]
)
#list of loci with > 10% null alleles
na_loci <- rownames(na_reorg_df[which(na_reorg_df$`Observed frequency` > 10),])
?write.csv
#generate input data frame for parentage - all loci
write.csv(UHA_scores_clean_df, "Analysis/Parentage_Analysis/All_Loci/Input_Files/UHA_all_loci_par_df.csv",
rownames = FALSE)
#generate input data frame for parentage - all loci
write.csv(UHA_scores_clean_df, "Analysis/Parentage_Analysis/All_Loci/Input_Files/UHA_all_loci_par_df.csv",
rownames = NULL)
#generate input data frame for parentage - all loci
write.csv(UHA_scores_clean_df, "Analysis/Parentage_Analysis/All_Loci/Input_Files/UHA_all_loci_par_df.csv",
row.names = FALSE)
?contains
#generate a data frame removing alleles with high null allele %
UHA_red_loci_df <- UHA_scores_clean_df %>%
select(-contains(UHA_scores_clean_df))
library(tidyverse)
#generate a data frame removing alleles with high null allele %
UHA_red_loci_df <- UHA_scores_clean_df %>%
select(-contains(UHA_scores_clean_df))
#generate a data frame removing alleles with high null allele %
UHA_red_loci_df <- UHA_scores_clean_df %>%
select(-contains(na_loci))
View(UHA_red_loci_df)
na_loci
View(UHA_scores_clean_df)
View(UHA_scores_df)
gsub('_[^_]*$', '', na_loci))
gsub('_[^_]*$', '', na_loci)
#remove underscores
na_loci <- gsub('_[^_]*$', '', na_loci)
#generate a data frame removing alleles with high null allele %
UHA_red_loci_df <- UHA_scores_clean_df %>%
select(-contains(na_loci))
View(UHA_red_loci_df)
#list of loci with > 15% null alleles
na_loci <- rownames(na_reorg_df[which(na_reorg_df$`Observed frequency` > 15),])
#remove underscores
na_loci <- gsub('_[^_]*$', '', na_loci)
#generate a data frame removing alleles with high null allele %
UHA_red_loci_df <- UHA_scores_clean_df %>%
select(-contains(na_loci))
View(UHA_red_loci_df)
#generate parentage input data without loci with high null allele %
write.csv(UHA_scores_clean_df, "Analysis/Parentage_Analysis/Red_Loci/Input_Files/UHA_red_loci_par_df.csv",
row.names = FALSE)
#generate input data frame for parentage - all loci
write.csv(UHA_scores_clean_df, "Analysis/Parentage_Analysis/All_Loci/Input_Files/UHA_all_loci_genotype_df.csv",
row.names = FALSE)
#generate a data frame removing loci with high null allele %
UHA_red_loci_df <- UHA_scores_clean_df %>%
select(-contains(na_loci))
#generate parentage input data without loci with high null allele %
write.csv(UHA_scores_clean_df, "Analysis/Parentage_Analysis/Red_Loci/Input_Files/UHA_red_loci_genotype_df.csv",
row.names = FALSE)
#generate a data frame removing loci with high null allele %
UHA_red_loci_df <- UHA_scores_clean_df %>%
select(-contains(na_loci))
#generate parentage input data without loci with high null allele %
write.csv(UHA_red_loci_df, "Analysis/Parentage_Analysis/Red_Loci/Input_Files/UHA_red_loci_genotype_df.csv",
row.names = FALSE)
