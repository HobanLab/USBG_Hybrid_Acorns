library(adegenet)
library(poppr)
library(PopGenReport)
#set working directoy
setwd("../Data_Files")
###########################
#     Load Data Files     #
###########################
#set working directory
setwd("../..")
# parentage_results <- read_csv("UHA_11_14_23_parentage_analysis.csv")  # reading in parentage_results
#spatial_parentage_results <- read_csv("UHA_11_14_23_parentage_analysis.csv")  # reading in parentage results again for future addition of spatial data
par_results <- read.csv("Analysis/Parentage_Analysis/Initial_Run/Output_Files/UHA_parentage_sumary.csv")
#set working directoy
setwd("../Data_Files")
setwd("Data_Files")
#load in genepop file as a genind object
UHA_genind <- read.genepop("Genotype_Files/2024_UHA_genepop.gen", ncode = 2)
#load CERVUS data files
UHA_CERVUS_prep <- read.csv("Parentage_Files/2024_04_22_CERVUS_Prep.csv")
#load score df
UHA_scores_df <- read.csv("CSV_Files/UHA_score_df.csv")
#reduce genind file for individuals with greater than 25% missing data
UHA_genind_nomd <- missingno(UHA_genind, type = "geno",
cutoff = 0.25, quiet = FALSE, freq = FALSE)
rownames(UHA_genind_nomd@tab)
rownames(UHA_scores_df)
UHA_scores_df[,1]
UHA_scores_clean_df <- UHA_scores_df[!UHA_scores_df[,1] %in% rownames(UHA_genind_nomd),]
UHA_scores_clean_df <- UHA_scores_df[UHA_scores_df[,1] %in% !rownames(UHA_genind_nomd),]
UHA_scores_clean_df <- UHA_scores_df[!rownames(UHA_genind_nomd) %in% UHA_scores_df[,1],]
UHA_scores_clean_df <- UHA_scores_df[rownames(UHA_genind_nomd@tab) %in% UHA_scores_df[,1],]
#run null allele calculations over all genind objects
UHA_null_all <- null.all(UHA_genind_nomd)
UHA_scores_clean_df <- UHA_scores_df[!rownames(UHA_genind_nomd@tab) %in% UHA_scores_df[,1],]
UHA_scores_clean_df <- UHA_scores_df[!rownames(UHA_genind_nomd@tab) %in% UHA_scores_df[,1],]
UHA_scores_clean_df <- UHA_scores_df[rownames(UHA_genind_nomd@tab) %in% UHA_scores_df[,1],]
rownames(UHA_genind_nomd@tab)
length(rownames(UHA_genind_nomd@tab))
head(UHA_scores_df[,1])
UHA_scores_clean_df <- UHA_scores_df[UHA_scores_df[,1] %in%
rownames(UHA_genind_nomd@tab),]
#write out
write.csv(UHA_scores_clean_df, "CSV_Files/UHA_score_clean_df.csv")
#parentage df
par_df <- read.csv("Data_Files/CSV_Files/UHA_score_clean_df.csv")
setwd("..")
#parentage df
par_df <- read.csv("Data_Files/CSV_Files/UHA_score_clean_df.csv")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(geofi)
library(sf)
library(geosphere)
install.packages("geosphere")
install.packages("sf")
library(tidyverse)
library(dplyr)
library(ggplot2)
install.packages("geofi")
View(par_df)
#parentage df
par_df <- read.csv("Data_Files/CSV_Files/UHA_score_clean_df.csv",
row.names = FALSE)
#parentage df
par_df <- read.csv("Data_Files/CSV_Files/UHA_score_clean_df.csv",
row.names = NULL)
#remove first column
par_df <- par_df[,-1]
full_parentage <- left_join(par_df, par_results, by=c('Offspring ID'='Tissue_ID'))
View(par_df)
View(par_results)
# parentage_results <- read_csv("UHA_11_14_23_parentage_analysis.csv")  # reading in parentage_results
#spatial_parentage_results <- read_csv("UHA_11_14_23_parentage_analysis.csv")  # reading in parentage results again for future addition of spatial data
#write in the parentage results summary
par_results <- read.csv("Analysis/Parentage_Analysis/Initial_Run/Output_Files/UHA_parentage_sumary.csv")
colnames(par_results)
colnames(par_results) <-  gsub('\\.', '_', colnames(par_results))
full_parentage <- left_join(par_df, par_results, by=c('Offspring_ID'='Tissue_ID'))
colnames(par_df[1])
#rename offspring ID to tissue ID
colnames(par_df)[1] <- "Tissue_ID"
full_parentage <- left_join(par_df, par_results, by=c('Offspring_ID'='Tissue_ID'))
full_parentage <- left_join(par_df, par_results, by=c('Tissue_ID'='Tissue_ID'))
#parentage df
par_df <- read.csv("Data_Files/CSV_Files/UHA_score_clean_df.csv")
#remove first column
par_df <- par_df[,-1]
full_parentage <- left_join(par_df, par_results,
by=c('Offspring_ID'='Tissue_ID'))
#limit to offspring
off_df <- par_df[par_df$Parent_Offspring == "O",]
full_parentage <- left_join(off_df, par_results,
by=c('Offspring_ID'='Tissue_ID'))
View(off_df)
colnames(off_df)
colnames(par_results)
#rename offspring ID to tissue ID
colnames(off_df)[1] <- "Offspring_ID"
full_parentage <- left_join(off_df, par_results, by='Offspring_ID')
View(full_parentage)
#Adding in Species Information for Maternal and Paternal trees
keep_col_ID <- c("Offspring_ID","Mother_ID", "Candidate_father_ID")
# Narrowing full_parentage data set to only include the necessary information
full_parentage <- full_parentage[keep_col_ID]
View(full_parentage)
#joining the genotypes with the parentage results
#to create the full_parentage data set that will be have spatial data,
#hybrid status, and half sibling status.
full_parentage <- left_join(off_df, par_results, by='Offspring_ID')
View(full_parentage)
# full_parentage <- left_join(full_parentage, genotypes, by=c('Mother ID' = 'Tissue_ID'))  # Including mother species in the data, full_parentage2 is not necessary for further analysis
# keeps <- c("Offspring ID","Mother ID", "Candidate father ID", "Species")
full_parentage <- full_parentage[keeps] # Narrowing the data again after the join of data sets
#Adding in Species Information for Maternal and Paternal trees
keep_col_ID <- c("Offspring_ID","Mother_ID", "Candidate_father_ID", "Species")
# full_parentage <- left_join(full_parentage, genotypes, by=c('Mother ID' = 'Tissue_ID'))  # Including mother species in the data, full_parentage2 is not necessary for further analysis
# keeps <- c("Offspring ID","Mother ID", "Candidate father ID", "Species")
full_parentage <- full_parentage[keep_col_ID] # Narrowing the data again after the join of data sets
full_parentage <- full_parentage %>%
rename('Mother_Species' = 'Species')
View(par_df)
#create data frame with father species
full_parentage2 <- left_join(full_parentage,
par_results, by=c('Candidate father ID'='Tissue_ID'))
View(par_df)
View(par_results)
colnames(par_results)
colnames(full_parentage)
#create data frame with father species
full_parentage2 <- left_join(full_parentage,
par_results, by='Candidate_father_ID')
View(full_parentage2)
View(off_df)
full_parentage
par_results
#create data frame with father species
paternal_assignment <-  par_df[par_df$Tissue_ID %in%
par_results$Candidate_father_ID,]
View(paternal_assignment)
head(paternal_assignment)
head(paternal_assignment$Tissue_ID)
head(par_results$Candidate_father_ID)
full_parentage <- left_join(full_parentage, off_df, by=c('Candidate_father_ID'='Tissue_ID'))  # Completing same steps again to join Candidate Father Species
library(dplyr)
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
full_parentage2 <- left_join(full_parentage, par_df, by=c('Candidate_father_ID' = 'Tissue_ID'))  # Completing same steps again to join Candidate Father Species
View(full_parentage2)
keep_col_ID2 <- c("Offspring_ID","Mother_ID", "Candidate_father_ID", "Mother_Species", "Species")
#add paternal species
full_parentage <- left_join(full_parentage, par_df,
by=c('Candidate_father_ID' = 'Tissue_ID'))
#now reduce columns
keep_col_ID2 <- c("Offspring_ID","Mother_ID","Candidate_father_ID", "Mother_Species", "Species")
#reduce data frame by populated columns
full_parentage <- full_parentage[keep_col_ID2]
#rename columns
full_parentage <- full_parentage %>%
rename('Candidate_Father_Species' = 'Species')
View(full_parentage)
